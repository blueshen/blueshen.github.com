<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: composite | Blues 小站]]></title>
  <link href="http://www.shenyanchao.cn/tags/composite/atom.xml" rel="self"/>
  <link href="http://www.shenyanchao.cn/"/>
  <updated>2015-03-26T13:14:42+08:00</updated>
  <id>http://www.shenyanchao.cn/</id>
  <author>
    <name><![CDATA[ShenYanchao]]></name>
    <email><![CDATA[zhiyi.shen@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[设计模式：组合（composite） in java]]></title>
    <link href="http://www.shenyanchao.cn/blog/2012/11/02/composite-in-java/"/>
    <updated>2012-11-02T20:07:00+08:00</updated>
    <id>http://www.shenyanchao.cn/blog/2012/11/02/composite-in-java</id>
    <content type="html"><![CDATA[<p><strong>定义：</strong>组合模式（Composite Pattern）也叫合成模式，有时又叫做部分-整体模式（Part-Whole），主要是用来描述部分与整体的关系。确切的定义：将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。</p>

<p>组合模式类图如下：</p>

<p><img src="/images/blog/composite-pattern.jpg" alt="组合模式" /></p>

<p>组合模式有以下几个角色：</p>

<ul>
<li>Component抽象构件角色 <br/>
定义参加组合对象的共有方法和树形，可以定义一些默认的行为或属性。</li>
<li>Leaf叶子构件  <br/>
叶子对象，下面没有其他分支，也就是最小的遍历单位。</li>
<li>Composite树枝构件  <br/>
树枝对象，它的作用是组合树枝节点和叶子节点形成一个树形结构。</li>
</ul>


<p>这个说白了就是一个树形结构，不再具体使用例子了。</p>
]]></content>
  </entry>
  
</feed>