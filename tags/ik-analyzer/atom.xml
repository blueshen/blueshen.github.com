<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: ik-analyzer | Blues 小站]]></title>
  <link href="http://www.shenyanchao.cn/tags/ik-analyzer/atom.xml" rel="self"/>
  <link href="http://www.shenyanchao.cn/"/>
  <updated>2014-11-25T12:56:14+08:00</updated>
  <id>http://www.shenyanchao.cn/</id>
  <author>
    <name><![CDATA[ShenYanchao]]></name>
    <email><![CDATA[zhiyi.shen@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用mahout对Sogou语料库进行分类]]></title>
    <link href="http://www.shenyanchao.cn/blog/2014/11/14/use-mahout-to-classify-sogou-corpus/"/>
    <updated>2014-11-14T13:26:00+08:00</updated>
    <id>http://www.shenyanchao.cn/blog/2014/11/14/use-mahout-to-classify-sogou-corpus</id>
    <content type="html"><![CDATA[<h3>软件版本</h3>

<ul>
<li>Ubuntu Linux</li>
<li><a href="http://mirror.bit.edu.cn/apache/mahout/0.9/mahout-distribution-0.9.tar.gz">mahout-0.9</a>,本文写作的时候的最新版本</li>
<li><a href="http://download.labs.sogou.com/dl/sogoulabdown/SogouC.reduced.20061102.tar.gz">Sogou语料库</a>精简版</li>
<li><a href="https://github.com/blueshen/ik-analyzer">ik-analyzer</a>, 这个版本是专门为了在mahout中进行分词而单独做的版本，源码从官方拿来。只更改了停用词，以及适配lucene4.6.1版本。maven化更方便使用。</li>
</ul>


<h3>Sogou语料库处理</h3>

<p>下载后的预料库，文档都是GB2312编码的。虽然mahout支持不同的编码方式，但是为了更方便的放到Hadoop里跑，还是建议先转化为标准的UTF-8.
语料库解压后，是sogou目录。我们执行以下代码进行转化，转换后的在utf/sogou目录下：</p>

<pre><code>find sogou -type d -exec mkdir -p utf/{} \;
find sogou -type f -exec iconv -f GB2312 -t UTF-8 {} -o utf/{} \;
</code></pre>

<h3>使用mahout生成sequence file</h3>

<p>进入utf/sogou目录，执行：</p>

<pre><code>mahout seqdirectory -i sogou -o sogou-seq -c UTF-8 -ow
</code></pre>

<p>生成的sequence file存放在sogou-seq目录内。
可以通过seqdumper命令查看：</p>

<!--more-->


<pre><code>mahout seqdumper -i sogou-seq/part-m-00000 | more
</code></pre>

<p><img src="/images/blog/2014/sogou-seqfile.png" alt="" /></p>

<p>如果是在hadoop上跑，可以这样看。</p>

<pre><code>hadoop fs -text sogou-seq/part-m-00000 | more
</code></pre>

<h3>使用seq2sparse生成Vectors</h3>

<p>执行命令：</p>

<pre><code>mahout seq2sparse -i sogou-seq  -o sogou-vectors -lnorm -nv -wt tfidf -a org.wltea.analyzer.lucene.IKAnalyzer -ow
</code></pre>

<p>查看生成的vector</p>

<p>mahout vectordump -i sogou-vectors/tfidf-vectors/part-r-00000 | more</p>

<p><img src="/images/blog/2014/sogou-vector.png" alt="" /></p>

<p>需要注意的是<code>org.wltea.analyzer.lucene.IKAnalyzer</code>，是上面提到的ik-analyzer里的。需要将ik-analyzer打包，然后将打出的包，放入$MAHOUT_HOME/lib内。默认是英文的，使用的是<code>org.apache.lucene.analysis.standard.StandardAnalyzer</code>，空格分割明显不适用中文。</p>

<h3>切分训练集和测试集</h3>

<pre><code>mahout split -i sogou-vectors/tfidf-vectors/ --trainingOutput sogou-train-vectors --testOutput sogou-test-vectors --randomSelectionPct 40 --overwrite --sequenceFiles -xm sequential
</code></pre>

<h3>使用Native Bayes训练model</h3>

<pre><code>mahout trainnb -i sogou-train-vectors -el -o sogou-model -li sogou-labelindex -ow -c
</code></pre>

<h3>使用测试集来查看效果</h3>

<pre><code>mahout testnb -i sogou-test-vectors -m sogou-model -l sogou-labelindex -ow -o sogou-testing -c
</code></pre>

<p><img src="/images/blog/2014/sogou-result.png" alt="" /></p>

<p>可以看出87%的正确率还是不错的。</p>

<hr />

<p>参考文档：</p>

<p><a href="http://mahout.apache.org/users/classification/twenty-newsgroups.html">http://mahout.apache.org/users/classification/twenty-newsgroups.html</a>   <br/>
<a href="http://www.sogou.com/labs/dl/c.html">http://www.sogou.com/labs/dl/c.html</a></p>
]]></content>
  </entry>
  
</feed>