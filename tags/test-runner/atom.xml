<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: test-runner | Blues 小站]]></title>
  <link href="http://www.shenyanchao.cn/tags/test-runner/atom.xml" rel="self"/>
  <link href="http://www.shenyanchao.cn/"/>
  <updated>2013-09-24T19:12:33+08:00</updated>
  <id>http://www.shenyanchao.cn/</id>
  <author>
    <name><![CDATA[ShenYanchao]]></name>
    <email><![CDATA[zhiyi.shen@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JsTestDriver 简介]]></title>
    <link href="http://www.shenyanchao.cn/blog/2013/03/22/jstestdriver-in-brief/"/>
    <updated>2013-03-22T16:11:00+08:00</updated>
    <id>http://www.shenyanchao.cn/blog/2013/03/22/jstestdriver-in-brief</id>
    <content type="html"><![CDATA[<h1>jsTestDriver</h1>

<p>jsTestDriver是一个JavaScript单元测试工具，易于与持续构建系统相集成并能够在多个浏览器上执行运行测试，轻松实现TDD（测试驱动开发）风格的开发。当在项目中配置好js-test-driver以后，如同junit测试java文件一般，js-test-driver可以直接通过直接运行js文件，来对js文件单元测试。 <br/>
<img src="/images/blog/jsTestDriver-framework.jpg" alt="alt jsTestDriver框架" /></p>

<!--more-->


<h5>在Intellij IDEA中安装JsTestDriver</h5>

<ul>
<li>打开IDEA编辑器，点击<strong>File</strong>，点击下拉列表中的<strong>setting</strong>，进入IDEA设置对话框</li>
<li>在搜索框中键入<strong>plugins</strong>，在搜索结果中选择<strong>plugins</strong>这一项</li>
<li>点击<strong>Browse Repositories</strong>，在弹出的列表中搜索jsTestDriver。</li>
<li>右击jsTestDriver插件，选择<strong>Download and Install</strong>.</li>
</ul>


<p><img src="/images/blog/idea-install-jstestdriver-plugin-dialog.png" alt="alt jsTestDriver插件安装" /></p>

<h5>在IDEA中使用jsTestDriver运行js测试代码</h5>

<ul>
<li>在IDEA中新建一个空的工程，在工程目录下新建代码包test</li>
<li><p>在src代码包中新建Greeter.js代码如下：</p>

<p>  myapp = {};<br/>
  myapp.Greeter = function() { };<br/>
  myapp.Greeter.prototype.greet = function(name) {
  return "Hello " + name + "!";<br/>
  };</p></li>
<li><p>在test代码包中新建GreeterTest.js,代码如下</p>

<p>  GGdTestCase("GreeterTest", {
  "test greet": function() {</p>

<pre><code>  var greeter = new myapp.Greeter();
  assertEquals("Hello World!", greeter.greet("World"));
</code></pre>

  },
  "test greet null": function() {

<pre><code>  var greeter = new myapp.Greeter();
  //assertNull(greeter.greet(null));
  assertTrue(true);
</code></pre>

<p>  }
  });</p></li>
<li><p>在项目主文件夹中新建配置文件greeter.jstd,文件内容如下：</p>

<p>  load:<br/>
-- src/Greeter.js<br/>
--test/GreeterTest.js</p></li>
<li>启动jsTestDriver Server<br/>
<img src="/images/blog/jsTestDriver-server.jpg" alt="alt jsTestDriver server" /></li>
<li>打开本地浏览器，访问url http://localhost:9876/capture</li>
<li>运行greeter.jstd</li>
</ul>


<h5>在Eclipse中安装jsTestDriver</h5>

<ul>
<li>在<strong>Help</strong>中的<strong>Install new software</strong>中，添加一个update site ：http://js-test-driver.googlecode.com/svn/update/</li>
<li>安装完毕后，重启Eclipse，新建一个空的java项目</li>
<li>在java项目中添加test代码包，在src中新建src.js,其代码如IDEA中的Greeter.js一样。</li>
<li>在test中添加test.js，其代码和IDEA中GreeterTest.js一样。</li>
<li><p>在项目目录中添加配置文件jsTestDriver.conf，其内容为</p>

<p>  load:<br/>
  -- src/<em>.js<br/>
  -- test/</em>.js<br/>
目录结构如图：<br/>
<img src="/images/blog/eclipse-jstestDriver.jpg" alt="alt 目录结构" /></p></li>
<li>配置Run Configuration，新建一个Js Test Driver Test, 选择好项目和相应的配置文件。</li>
<li>启动jsTestDriver服务器，然后用浏览器去访问http://127.0.0.1:4244/capture，这样就可以在
浏览器中执行我们的js测试脚本了。<br/>
<img src="/images/blog//eclipse-test.jpg" alt="alt eclipse执行结果" /><br/>
我们可以再eclipse中配置jsTestDriver的相关项，如图：<br/>
<img src="/images/blog//eclipse-js-setting.jpg" alt="alt eclipse配置jsTestDriver" /></li>
</ul>


<hr />

<p>参考文献：<a href="http://code.google.com/p/js-test-driver/">http://code.google.com/p/js-test-driver/</a> <br/>
感谢：youthflies</p>
]]></content>
  </entry>
  
</feed>