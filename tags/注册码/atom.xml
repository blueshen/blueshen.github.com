<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 注册码 | Blues 小站]]></title>
  <link href="http://www.shenyanchao.cn/tags/注册码/atom.xml" rel="self"/>
  <link href="http://www.shenyanchao.cn/"/>
  <updated>2015-03-26T13:21:32+08:00</updated>
  <id>http://www.shenyanchao.cn/</id>
  <author>
    <name><![CDATA[ShenYanchao]]></name>
    <email><![CDATA[zhiyi.shen@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Intellij IDEA keygen]]></title>
    <link href="http://www.shenyanchao.cn/blog/2014/11/07/intellij-idea-keygen/"/>
    <updated>2014-11-07T19:30:00+08:00</updated>
    <id>http://www.shenyanchao.cn/blog/2014/11/07/intellij-idea-keygen</id>
    <content type="html"><![CDATA[<p>Intellij IDEA 14问世了。注册码生成器也来了。</p>

<pre><code>import java.math.BigInteger;
import java.util.Date;
import java.util.Random;
import java.util.zip.CRC32;

public class IntellijIDEAKeyGen {

    private static final int version = 14;

    /**
     * @param s
     * @param i
     * @param bytes
     * @return
     */
    private static short getCRC(String s, int i, byte bytes[]) {
        CRC32 crc32 = new CRC32();
        if (s != null) {
            for (int j = 0; j &lt; s.length(); j++) {
                char c = s.charAt(j);
                crc32.update(c);
            }
        }
        crc32.update(i);
        crc32.update(i &gt;&gt; 8);
        crc32.update(i &gt;&gt; 16);
        crc32.update(i &gt;&gt; 24);
        for (int k = 0; k &lt; bytes.length - 2; k++) {
            byte byte0 = bytes[k];
            crc32.update(byte0);
        }
        return (short) (int) crc32.getValue();
    }

    /**
     * @param biginteger
     * @return String
     */
    private static String encodeGroups(BigInteger biginteger) {
        BigInteger beginner1 = BigInteger.valueOf(0x39aa400L);
        StringBuilder sb = new StringBuilder();
        for (int i = 0; biginteger.compareTo(BigInteger.ZERO) != 0; i++) {
            int j = biginteger.mod(beginner1).intValue();
            String s1 = encodeGroup(j);
            if (i &gt; 0) {
                sb.append("-");
            }
            sb.append(s1);
            biginteger = biginteger.divide(beginner1);
        }
        return sb.toString();
    }

    /**
     * @param i
     * @return
     */
    private static String encodeGroup(int i) {
        StringBuilder sb = new StringBuilder();
        for (int j = 0; j &lt; 5; j++) {
            int k = i % 36;
            char c;
            if (k &lt; 10) {
                c = (char) (48 + k);
            } else {
                c = (char) ((65 + k) - 10);
            }
            sb.append(c);
            i /= 36;
        }
        return sb.toString();
    }

    /**
     * @param name
     * @param days
     * @param id
     * @return
     */
    public static String makeKey(String name, int days, int id) {
        id %= 100000;
        byte bkey[] = new byte[12];
        bkey[0] = (byte) 1; // Product type: IntelliJ IDEA is 1
        bkey[1] = version;
        Date d = new Date();
        long ld = (d.getTime() &gt;&gt; 16);
        bkey[2] = (byte) (ld &amp; 255);
        bkey[3] = (byte) ((ld &gt;&gt; 8) &amp; 255);
        bkey[4] = (byte) ((ld &gt;&gt; 16) &amp; 255);
        bkey[5] = (byte) ((ld &gt;&gt; 24) &amp; 255);
        days &amp;= 0xffff;
        bkey[6] = (byte) (days &amp; 255);
        bkey[7] = (byte) ((days &gt;&gt; 8) &amp; 255);
        bkey[8] = 105;
        bkey[9] = -59;
        bkey[10] = 0;
        bkey[11] = 0;
        int w = getCRC(name, id % 100000, bkey);
        bkey[10] = (byte) (w &amp; 255);
        bkey[11] = (byte) ((w &gt;&gt; 8) &amp; 255);
        BigInteger pow = new BigInteger("89126272330128007543578052027888001981", 10);
        BigInteger mod = new BigInteger("86f71688cdd2612ca117d1f54bdae029", 16);
        BigInteger k0 = new BigInteger(bkey);
        BigInteger k1 = k0.modPow(pow, mod);
        String s0 = Integer.toString(id);
        String sz = "0";
        while (s0.length() != 5) {
            s0 = sz.concat(s0);
        }
        s0 = s0.concat("-");
        String s1 = encodeGroups(k1);
        s0 = s0.concat(s1);
        return s0;
    }

    public static void main(String[] args) {
        Random r = new Random();
        String key = makeKey("www.shenyanchao.cn", 0, r.nextInt(Integer.MAX_VALUE));
        System.out.println(key);
    }
}
</code></pre>
]]></content>
  </entry>
  
</feed>